package com.data.itsv.model;

import java.io.Serializable;

public class VVideoAlgorithm implements Serializable {
    /**
     * 摄像机编号
     */
    private String videoCode;

    /**
     * 视频分辨率，长宽用*分隔。如1920*1080
     */
    private String videoResolution;

    /**
     * 算法类型
     */
    private String algorithmType;

    /**
     * 分析区域，点xy坐标值用逗号分隔,点用&分隔，多个区域用分号分隔。如10-11,20,30-40,50-10,11;
     */
    private String area;

    /**
     * 参数，多个参数用逗号分隔，格式为：阈值下限、阈值上限、持续时间-单位秒。limitUp=10,limitDown=2,durationTime=5
     */
    private String parameter;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table v_video_algorithm
     *
     * @mbg.generated Mon Dec 28 11:02:40 CST 2020
     */
    private static final long serialVersionUID = 1L;

    public String getVideoCode() {
        return videoCode;
    }

    public void setVideoCode(String videoCode) {
        this.videoCode = videoCode == null ? null : videoCode.trim();
    }

    public String getVideoResolution() {
        return videoResolution;
    }

    public void setVideoResolution(String videoResolution) {
        this.videoResolution = videoResolution == null ? null : videoResolution.trim();
    }

    public String getAlgorithmType() {
        return algorithmType;
    }

    public void setAlgorithmType(String algorithmType) {
        this.algorithmType = algorithmType == null ? null : algorithmType.trim();
    }

    public String getArea() {
        return area;
    }

    public void setArea(String area) {
        this.area = area == null ? null : area.trim();
    }

    public String getParameter() {
        return parameter;
    }

    public void setParameter(String parameter) {
        this.parameter = parameter == null ? null : parameter.trim();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", videoCode=").append(videoCode);
        sb.append(", videoResolution=").append(videoResolution);
        sb.append(", algorithmType=").append(algorithmType);
        sb.append(", area=").append(area);
        sb.append(", parameter=").append(parameter);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}